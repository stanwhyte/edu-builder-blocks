AWSTemplateFormatVersion: 2010-09-09
Parameters:
  Env:
    Description: The environment associated with this network (i.e. DEV, PRD)
    Type: String
    Default: DEV
    AllowedValues:
      - DEV
      - TST
      - STG
      - PRD

  DirectoryId:
    Description: The SSM parameter containing the directory identifier
    Type: AWS::SSM::Parameter::Value<String>
    Default: /DEV/ActiveDirectory/Domain/DirectoryService/Connector/Id

  Vpc:
    Description: The SSM parameter containing the id for the AWS VPC
    Type: AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>
    Default: /DEV/Foundation/EC2/VPC/Id

  PrivateSubnet1:
    Description: The SSM parameter containing the first subnet to be used
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Subnet::Id>
    Default: /DEV/Foundation/NAT/1/EC2/Subnet/Id

  PrivateSubnet2:
    Description: The SSM parameter containing the second subnet to be used
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Subnet::Id>
    Default: /DEV/Foundation/NAT/2/EC2/Subnet/Id

  SoftwareS3BucketName:
    Description: Globally-unique DNS name for S3 bucket for storing software 
      to install via Image Builder
    Type: String
    Default: dev-example-appstream-software
    AllowedPattern: ^[a-z][a-z0-9\-]+$

  FleetInstanceType:
    Description: The instance type to use when launching both fleet and image 
      builder instances
    Type: String
    Default: stream.standard.medium
    AllowedValues:
      - stream.standard.medium
      - stream.standard.large
      - stream.compute.large
      - stream.compute.xlarge
      - stream.compute.2xlarge
      - stream.compute.4xlarge
      - stream.compute.8xlarge
      - stream.memory.large
      - stream.memory.xlarge
      - stream.memory.2xlarge
      - stream.memory.4xlarge
      - stream.memory.8xlarge
      - stream.memory.z1d.large
      - stream.memory.z1d.xlarge
      - stream.memory.z1d.2xlarge
      - stream.memory.z1d.3xlarge
      - stream.memory.z1d.6xlarge
      - stream.memory.z1d.12xlarge
      - stream.graphics-design.large
      - stream.graphics-design.xlarge
      - stream.graphics-design.2xlarge
      - stream.graphics-design.4xlarge
      - stream.graphics-desktop.2xlarge
      - stream.graphics-pro.4xlarge
      - stream.graphics-pro.8xlarge
      - stream.graphics-pro.16xlarge

  DesiredFleetInstances:
    Description: The Desired Compute Capacity for the Fleet
    Type: Number
    Default: 2

  FleetTypeSetting:
    Description: Whether the AppStream fleet will be always-on or on-demand
    Type: String
    Default: ON_DEMAND
    AllowedValues:
      - ON_DEMAND
      - ALWAYS_ON

  SessionRedirectURL:
    Description: The URL that users are redirected to after their streaming 
      session ends
    Type: String
    Default: http://www.amazon.com

  # # As an alternative, you can specify the ARN of the base image instead of
  # # the friendly name.  You must do one or the other, but not both.
  # ImageBuilderBaseImage:
  #   Description: The ARN of the public, private, or shared image to use
  #   Type: String
  #   AllowedPattern: ^arn:aws(?:\-cn|\-iso\-b|\-iso|\-us\-gov)?:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.\\-]{0,1023}$

  # ImageBuilderBaseImageName:
  #   Description: The name of the image used to create the image builder. Available base image listing is found on docs.aws.amazon.com/appstream2/latest/developerguide/base-image-version-history.html
  #   Type: String
  #   Default: AppStream-WinServer2019-12-12-2019
  #   MinLength: 1

  # Just like the base image for the image builder, you can specify the image
  # for the fleet using either the name or the ARN.
  FleetImageName:
    Description: The name of the image used for the fleet. This can be changed 
      without service interruption once the Image Builder has been used.
    Type: String
    Default: Amazon-AppStream2-Sample-Image-02-04-2019
    MinLength: 1

  # Email address for the test user account
  TestUserEmail:
    Description: Email address for the test user
    Type: String
    MinLength: 5
    AllowedPattern: ^([a-zA-Z0-9_\-\.\+]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
    ConstraintDescription: Must be a valid email address format.

# TODO:
# 1) Add OU as LDIF, under ou=Appstream
# 2) Make another service account for just appstream
# 3) Make Appstream configurable in script for OU
# 4) Add instructions or something to make an image builder that can domjn
# 5) Image standard AppStream-WinServer2019-04-22-2020 
# 6) Research Streaming Endpoint (Internet or new VPC Endpoint?)
# 7) Make an IAM role (s3 access?) that allows domain joining ops OR SG automate
# 8) Select Subnet1 and 2 automatically
# 9) Add name to subnets, hard to read
# 10) Make a test user or two, without admin privileges
# 11) Switch over to making directory with CloudFormation
# 12) Switch the login config to just user user principal name
# 13) Then, user principal name can be used to SSO into this
# 14) Integrate SAML with AWS SSO via https://aws.amazon.com/blogs/desktop-and-application-streaming/enable-federation-with-aws-single-sign-on-and-amazon-appstream-2-0/
# 15) Create SSO application by script
# 16) Update the fleet creation to use the AD config with domain join
# 17) Make role creation automated?
# 
Resources:

